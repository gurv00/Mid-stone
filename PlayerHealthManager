using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerHealthManager : MonoBehaviour {

    public int playerMaxHealth;
    public int playerCurrentHealth;

    private bool flashActive;
    public float flashLength;
    private float flashCounter;

    public float revive;
    private float reviveCounter;

    private SpriteRenderer playerSprite;

    private SFXManager sfxMan;

	// Use this for initialization
	void Start () {
        playerCurrentHealth = playerMaxHealth;
        sfxMan = FindObjectOfType<SFXManager>();
        playerSprite = GetComponent<SpriteRenderer>();
    }
	
	// Update is called once per frame
	void Update () {
		
        if(playerCurrentHealth <= 0)
        {

            sfxMan.playerDead.Play();
            gameObject.SetActive(false);

            reviveCounter = revive;
            if(reviveCounter > 0)
            {
                reviveCounter -= Time.deltaTime;
            }

            if(reviveCounter <= 0)
            {
                gameObject.SetActive(true);
                SetMaxHealth();
            }
        }

        if(flashActive)
        {

            if(flashCounter > flashLength * .66f)
            {
                playerSprite.color = new Color(playerSprite.color.r, playerSprite.color.g, playerSprite.color.b, 0f);
            } else if(flashCounter > flashLength * 0.33f)
            {
                playerSprite.color = new Color(playerSprite.color.r, playerSprite.color.g, playerSprite.color.b, 1f);
            } else if(flashCounter > 0)
            {
                playerSprite.color = new Color(playerSprite.color.r, playerSprite.color.g, playerSprite.color.b, 0f);
            } else {
                playerSprite.color = new Color(playerSprite.color.r, playerSprite.color.g, playerSprite.color.b, 1f);
                flashActive = false;
            }

            flashCounter -= Time.deltaTime;
        }
	}

    public void HurtPlayer(int damageToGive)
    {
        playerCurrentHealth -= damageToGive;
        sfxMan.playerHurt.Play();
        flashActive = true;
        flashCounter = flashLength;
        
    }

    public void HealPlayer(int healthToGive)
    {
        playerCurrentHealth += healthToGive;

        if(playerCurrentHealth >= playerMaxHealth)
        {
            SetMaxHealth();
        }
    }

    public void SetMaxHealth()
    {
        playerCurrentHealth = playerMaxHealth;
    }
}
